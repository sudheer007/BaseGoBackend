// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/organizations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get a list of organizations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 20, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PaginatedOrganizationsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Create a new organization",
                "parameters": [
                    {
                        "description": "Organization to create",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.OrganizationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get an organization by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.OrganizationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Update an organization",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organization data to update",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.OrganizationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an organization by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Delete an organization",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CreateOrganizationRequest": {
            "type": "object",
            "required": [
                "contactEmail",
                "displayName",
                "name",
                "primaryDomain",
                "tenantId"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contactEmail": {
                    "type": "string"
                },
                "contactPhone": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "maxUsers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/models.OrgSettings"
                },
                "tenantId": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "api.OrganizationResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contactEmail": {
                    "type": "string"
                },
                "contactPhone": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "maxUsers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/models.OrgSettings"
                },
                "status": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "api.PaginatedOrganizationsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.OrganizationResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "api.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.UpdateOrganizationRequest": {
            "type": "object",
            "required": [
                "contactEmail",
                "displayName",
                "name",
                "primaryDomain"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contactEmail": {
                    "type": "string"
                },
                "contactPhone": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "maxUsers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/models.OrgSettings"
                },
                "status": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "models.OrgSettings": {
            "type": "object",
            "properties": {
                "allowCrossOrgDataAccess": {
                    "type": "boolean"
                },
                "allowedIpRanges": {
                    "type": "string"
                },
                "enableFieldLevelAudit": {
                    "type": "boolean"
                },
                "enableIpRestriction": {
                    "type": "boolean"
                },
                "enableResourceAudit": {
                    "type": "boolean"
                },
                "enableUserAudit": {
                    "type": "boolean"
                },
                "maxLoginAttempts": {
                    "type": "integer"
                },
                "passwordComplexity": {
                    "description": "low, medium, high",
                    "type": "string"
                },
                "passwordMinLength": {
                    "type": "integer"
                },
                "passwordRotationDays": {
                    "type": "integer"
                },
                "requireMfa": {
                    "type": "boolean"
                },
                "sessionTimeoutMinutes": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "GoBackend API",
	Description:      "A secure Go backend API with Swagger.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
